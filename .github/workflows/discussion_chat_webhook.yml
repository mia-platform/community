name: "discussion-webhook"
on:
  discussion:
    types: ["created", "answered", "unanswered"]
jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: "Google Chat notification"
        run: |
          title="${{ github.event.discussion.title }}"
          escaped_title="${title//\'/\\\'}"
          data="{
            \"thread\": {\"threadKey\": \"${{github.event.discussion.number}}\"},
            \"cardsV2\": [
                {
                    \"cardId\": \"discussion-card\",
                    \"card\": {
                        \"header\": {
                            \"title\": \"Discussion #${{ github.event.discussion.number }} is ${{ github.event.action }}\",
                            \"subtitle\": \"Discussion tracker bot\"
                        },
                        \"sections\": {
                            \"widgets\": [
                                {
                                    \"decoratedText\": {
                                    \"topLabel\": \"Title\",
                                    \"text\": \"<b>${{ github.event.discussion.title }}</b>\",
                                    \"bottomLabel\": \"User: ${{ github.event.discussion.user.login }}\",
                                    }
                                },
                                {
                                    \"decoratedText\": {
                                    \"topLabel\": \"Category\",
                                    \"text\": \"${{ github.event.discussion.category.name }}\"
                                    }
                                },
                                {
                                    \"buttonList\": {
                                    \"buttons\": [
                                        {
                                        \"text\": \"OPEN DISCUSSION\",
                                        \"onClick\": {
                                            \"openLink\": {
                                            \"url\": \"${{github.event.discussion.html_url}}\"
                                            }
                                        }
                                        }
                                    ]
                                    }
                                }
                            ]
                        }
                    }
                }
            ]
          }"
          [ $(curl --location -X POST '${{secrets.WEBHOOK_CHAT_URL}}&messageReplyOption=REPLY_MESSAGE_FALLBACK_TO_NEW_THREAD' \
          --header 'Content-Type: application/json' \
          --data-raw "$data" -o /dev/null -w '%{http_code}') -eq 200 ]

      - name: "Send Mia-Assistant suggestion"
        if: ${{ github.event.action == 'created' }}
        env:
            WEBHOOK_CHAT_URL: ${{ secrets.WEBHOOK_CHAT_URL }}
            ASSISTANT_API_URL: ${{ secrets.ASSISTANT_API_URL }}
            ASSISTANT_M2M_AUTH: ${{ secrets.ASSISTANT_M2M_AUTH }}
            ASSISTANT_M2M_URL: ${{ secrets.ASSISTANT_M2M_URL }}
        run: |
            DISCUSSION_NUMBER="${{ github.event.discussion.number }}"

            # Login M2M

            TOKEN=$(echo -n "$ASSISTANT_M2M_AUTH" | base64 | xargs -I {} curl -X POST "$ASSISTANT_M2M_URL" \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -H "Authorization: Basic {}" \
            -d "grant_type=client_credentials" | jq -r '.access_token')
            
            # Get discussion body
            
            DISCUSSION_BODY=$(gh api graphql -f query='
            query($owner: String!, $repo: String!, $discussionNumber: Int!) {
              repository(owner: $owner, name: $repo) {
                discussion(number: $discussionNumber) {
                  body
                }
              }
            }' -f owner="${{ github.repository_owner }}" -f repo="${{ github.event.repository.name }}" -f discussionNumber=$DISCUSSION_NUMBER --jq '.data.repository.discussion.body')

            # Get suggestion from Mia-Assistant

            QUERY=$(jq -n \
                        --arg query "$DISCUSSION_BODY" \
                        '{chat_query: $query, chat_history: []}')
            
            RESPONSE=$(curl -s '$ASSISTANT_API_URL' \
                -H "Authorization: Bearer $TOKEN" \
                -H 'Content-Type: application/json' \
                --data-raw "$QUERY")
                
            MESSAGE=$(echo "$RESPONSE" | jq -r '.message')
            REFERENCE_LINKS=$(echo "$RESPONSE" | jq -r '[.references[].url] | join(", ")')

            # Send suggestion to the discussion thread

            DATA="{
                \"thread\": {\"threadKey\": \"$DISCUSSION_NUMBER\"},
                \"message\": {
                    \"text\": \"This is a suggestion generated by Mia-Assistant.\\n\\nPlease leave a feedback!!!\\n\\n$MESSAGE\\n\\nReferences links:\\n\\n$REFERENCE_LINKS.\"
                }
            }"

            curl --location -X POST "$WEBHOOK_CHAT_URL&messageReplyOption=REPLY_MESSAGE_FALLBACK_TO_NEW_THREAD" \
            --header 'Content-Type: application/json' \
            --data-raw "$DATA"
